{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/globalLoading.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","default","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","data","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","deleteTweet","window","confirm","doc","id","delete","refFromURL","attechmentUrl","toggleEditing","update","src","alt","class","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attechment","setAttechment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","cancelUpload","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","newArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","alert","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","GlobalLoading","props","loading","left","top","bottom","right","backgroundColor","position","zIndex","CircularProgress","App","setIsLoggedIn","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75774178.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.default.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from 'fbase';\nimport React, { useState } from 'react';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        //create New account\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        //login\n        const data = await authService.signInWithEmailAndPassword(\n          email,\n          password\n        );\n        console.log(data);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const setToggle = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className='container'>\n        <input\n          name='email'\n          type='email'\n          placeholder='Email'\n          required\n          value={email}\n          className='authInput'\n          onChange={onChange}\n        />\n        <input\n          name='password'\n          value={password}\n          type='password'\n          placeholder='Password'\n          required\n          className='authInput'\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          className='authInput authSubmit'\n          value={newAccount ? 'Create Account' : 'Log In'}\n        />\n        {error && <span className='authError'>{error}</span>}\n      </form>\n      <span onClick={setToggle} className='authSwitch'>\n        {newAccount ? 'Log In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { authService, firebaseInstance } from 'fbase';\nimport AuthForm from 'components/AuthForm';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className='authContainer'>\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size='3x'\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className='authBtns'>\n        <button onClick={onSocialClick} name='google' className='authBtn'>\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name='github' className='authBtn'>\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const deleteTweet = async () => {\n    const ok = window.confirm('Are you sure you want to delete your tweet');\n    if (ok) {\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n      await storageService.refFromURL(tweetObj.attechmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\n      text: newTweet,\n    });\n    setEditing(false);\n  };\n  return (\n    <div className='tweet'>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className='container tweetEdit'>\n            <input value={newTweet} onChange={onChange} required />\n            <input type='submit' value='Edit' className='formBtn' />\n          </form>\n          <span onClick={toggleEditing} className='formBtn cancelBtn'>\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n\n          {tweetObj.attechmentUrl && (\n            <img src={tweetObj.attechmentUrl} alt='' />\n          )}\n          {isOwner && (\n            <>\n              <div class='tweet__actions'>\n                <span onClick={deleteTweet}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState('');\n  const [attechment, setAttechment] = useState();\n\n  const onSubmit = async (event) => {\n    if (tweet === '') {\n      return;\n    }\n    event.preventDefault();\n    let attechmentUrl = '';\n    if (attechment) {\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await fileRef.putString(attechment, 'data_url');\n      attechmentUrl = await response.ref.getDownloadURL();\n    }\n    const newTweet = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attechmentUrl,\n    };\n    await dbService.collection('tweets').add(newTweet);\n    setTweet('');\n    cancelUpload();\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttechment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const cancelUpload = () => {\n    setAttechment('');\n  };\n  return (\n    <form onSubmit={onSubmit} className='factoryForm'>\n      <div className='factoryInput__container'>\n        <input\n          className='factoryInput__input'\n          value={tweet}\n          onChange={onChange}\n          type='text'\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type='submit' value='&rarr;' className='factoryInput__arrow' />\n      </div>\n      <label for='attach-file' className='factoryInput__label'>\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id='attach-file'\n        type='file'\n        accept='image/*'\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      <input type='submit' value='Tweet' />\n      {attechment && (\n        <div className='factoryForm__attachment'>\n          <img\n            src={attechment}\n            style={{\n              backgroundImage: attechment,\n            }}\n            alt=''\n          />\n          <div className='factoryForm__clear' onClick={cancelUpload}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default TweetFactory;\n","import Tweet from 'components/Tweet';\nimport TweetFactory from 'components/TweetFactory';\nimport { dbService } from 'fbase';\nimport React, { useEffect, useState } from 'react';\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    dbService.collection('tweets').onSnapshot((snapshot) => {\n      const newArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTweets(newArray);\n    });\n  }, []);\n\n  return (\n    <div className='container'>\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => {\n  console.log(userObj);\n  return (\n    <nav>\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n        <li>\n          <Link to='/' style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='2x' />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to='/profile'\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}>\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size='2x' />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : 'Profile'}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  // const getMyTweet = async () => {\n  //   const tweets = await dbService\n  //     .collection('tweets')\n  //     .where('creatorId', '==', userObj.uid)\n  //     .orderBy('createdAt')\n  //     .get();\n  //   console.log(tweets.docs.map((doc) => doc.data()));\n  // };\n\n  // useEffect(() => {\n  //   getMyTweet();\n  // }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n      window.alert('completed');\n    }\n  };\n  return (\n    <div className='container'>\n      <form onSubmit={onSubmit} className='profileForm'>\n        <input\n          onChange={onChange}\n          type='text'\n          placeholder='Display name'\n          value={newDisplayName}\n          autoFocus\n          className='formInput'\n        />\n        <input\n          type='submit'\n          value='Update Profile'\n          className='formBtn'\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className='formBtn cancelBtn logOut' onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { Fragment } from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\nimport Profile from 'routes/Profile';\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}>\n            <Route exact path='/'>\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path='/profile'>\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Redirect from='*' to='/' />\n          </div>\n        ) : (\n          <>\n            <Route exact path='/'>\n              <Auth />\n            </Route>\n            <Redirect from='*' to='/' />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { CircularProgress } from '@material-ui/core';\nimport React from 'react';\n\nconst GlobalLoading = (props) => {\n  return props.loading ? (\n    <div\n      style={{\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n        backgroundColor: '#fff',\n        opacity: 0.6,\n        position: 'fixed',\n        zIndex: 999999,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}>\n      <CircularProgress style={{ color: '#494e8f', marginBottom: '10px' }} />\n      <div>Loading...</div>\n    </div>\n  ) : null;\n};\nexport default GlobalLoading;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\nimport GlobalLoading from './globalLoading';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <Fragment>\n      {init ? (\n        <AppRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        <GlobalLoading loading={true} />\n      )}\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}